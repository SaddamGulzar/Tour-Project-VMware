name: CI/CD Tour-Project

on:
  push:
    branches:
      - main

jobs:
  deploy-vm:
    name: Deploy to Remote VM (Zero Downtime)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Copy project to remote VM
        uses: appleboy/scp-action@v0.1.5
        with:
          host: ${{ secrets.VM_IP }}
          username: ${{ secrets.VM_USER }}
          key: ${{ secrets.VM_SSH_KEY }}
          port: 22
          source: "."
          target: "~/tour-project"

      - name: Deploy Docker container on remote VM
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.VM_IP }}
          username: ${{ secrets.VM_USER }}
          key: ${{ secrets.VM_SSH_KEY }}
          port: 22
          script: |
            cd ~/tour-project

            # Build new Docker image
            echo "Building Docker image..."
            docker build -t tour-project:latest .

            # Run new container on temporary port 8089
            echo "Starting new container..."
            docker run -d --name tour-project-temp -p 8089:8088 tour-project:latest

            # Wait a few seconds for the container to initialize
            echo "Waiting for container to start..."
            sleep 5

            # Stop & remove old container if exists
            OLD_CONTAINER=$(docker ps -q -f name=tour-project)
            if [ -n "$OLD_CONTAINER" ]; then
              echo "Stopping old container..."
              docker stop tour-project || true
              docker rm tour-project || true
            fi

            # Rename the new container to the production name
            docker rename tour-project-temp tour-project

            # Optional: prune old images, keeping only the latest 3
            echo "Pruning old Docker images..."
            docker images -q tour-project | tail -n +4 | xargs -r docker rmi -f

            # Show logs of the new container
            echo "New container logs:"
            docker logs tour-project --tail 20
